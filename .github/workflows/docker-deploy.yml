# doc: https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images
name: 'Publish Container Image'

on:
  push:
    tags:
      - 'v*.*.*'
  # 支持手动触发
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ${{ secrets.REGISTRY }}
  # github.repository as <account>/<repo>
  IMAGE_NAME: renxia/m3u8-dl # ${{ github.repository }}
  IMAGE_NAME_REPO: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: Asia/Shanghai

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
            ghcr.io/${{ env.IMAGE_NAME_REPO }}
          # generate Docker tags based on the following events/attributes
          #   nightly, main, pr-2, 1.2.3, 1.2, 1
          flavor: |
            latest=false
          tags: |
            type=schedule,pattern=nightly
            type=edge
            type=ref,event=pr
            type=ref,event=branch,enable=${{ github.ref != format('refs/heads/{0}', 'main') }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: 设置 QEMU 支持多架构
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          build-args: |
            MAINTAINER=${{ github.repository_owner }}
            SOURCE_COMMIT=${{ github.sha }}
          network: host
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64 # ,linux/ppc64le,linux/386
          context: .
          file: ./docker/Dockerfile
          push: true # ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=renxia/meu8-dl:cache
          cache-to: type=registry,ref=renxia/meu8-dl:cache,mode=max

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     # subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-name: ghcr.io/${{ env.IMAGE_NAME_REPO }}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true

      - name: Image digest
        run: |
          echo ${{ steps.docker_build.outputs.digest }}
